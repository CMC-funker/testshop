<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.springmvc.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置注解形式的适配器和映射器 -->
    <mvc:annotation-driven />

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />   <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
    <!-- 静态资源访问（不拦截此目录下的东西的访问） -->
    <mvc:resources location="/js/"  mapping="/js/**" />
    <mvc:resources location="/css/"  mapping="/css/**" />
    <mvc:resources location="/images/"  mapping="/images/**" />

    <!--<mvc:resources location="/font/"  mapping="/fonts/**" />-->
    <!--<mvc:resources location="/error/" mapping="/error/**"/>-->
    <!--<mvc:resources location="/upload/" mapping="/upload/**"/>-->

    <!-- 声明拦截器组件的拦截位置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 设置被拦截器拦截处理的URL -->
            <!-- 可以设置具体URL如 /demo.do
            也可以设置 /** 处理任何的URL
            或者 /user/** 处理 user 路径下的URL  -->
            <mvc:mapping path="/user/**"/>
            <!-- 排除的URL, 不被拦截器拦截的URL -->
            <mvc:exclude-mapping path="/user/toLogin"/>
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/user/check_login"/>
            <mvc:exclude-mapping path="/user/toRegister"/>
            <mvc:exclude-mapping path="/user/register"/>
            <mvc:exclude-mapping path="/user/checkPhone"/>
            <mvc:exclude-mapping path="/user/checkCode"/>
            <mvc:exclude-mapping path="/user/search"/>
            <mvc:exclude-mapping path="/user/collect"/>
            <mvc:exclude-mapping path="/user/forget_password"/>
            <mvc:exclude-mapping path="/user/forget"/>
            <mvc:exclude-mapping path="/user/showAddress"/>
            <!--<mvc:exclude-mapping path="/user/get_verify_code"/>-->
            <mvc:exclude-mapping path="/user/search/search"/>

            <!-- 指定拦截器 -->
            <bean class="com.springmvc.web.AccessInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <!-- 设置被拦截器拦截处理的URL -->
            <!-- 可以设置具体URL如 /demo.do
            也可以设置 /** 处理任何的URL
            或者 /user/** 处理 user 路径下的URL  -->
            <mvc:mapping path="/admin/**"/>
            <!-- 排除的URL, 不被拦截器拦截的URL -->

            <mvc:exclude-mapping path="/admin/toLogin"/>
            <mvc:exclude-mapping path="/admin/login"/>


            <!-- 指定拦截器 -->
            <bean class="com.springmvc.web.AdminAccessInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:annotation-driven />


</beans>